[{"/Users/jermi/Desktop/Coding/projects/jestPractice/src/App.js":"1","/Users/jermi/Desktop/Coding/projects/jestPractice/src/index.js":"2","/Users/jermi/Desktop/Coding/projects/jestPractice/src/reportWebVitals.js":"3","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/todo.js":"4","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/index.js":"5","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/Header/header.js":"6","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/List/List.js":"7","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/List/ListItem.js":"8","/Users/jermi/Desktop/Coding/projects/jestPractice/src/utils/mock.js":"9"},{"size":182,"mtime":1611133554933,"results":"10","hashOfConfig":"11"},{"size":501,"mtime":1609637677814,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1609637260799,"results":"14","hashOfConfig":"11"},{"size":1137,"mtime":1610539424042,"results":"15","hashOfConfig":"11"},{"size":306,"mtime":1611144577057,"results":"16","hashOfConfig":"11"},{"size":430,"mtime":1611133602042,"results":"17","hashOfConfig":"11"},{"size":373,"mtime":1611144101957,"results":"18","hashOfConfig":"11"},{"size":355,"mtime":1611144502615,"results":"19","hashOfConfig":"11"},{"size":304,"mtime":1611144688855,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"5r4rzi",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"tlxjq0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jermi/Desktop/Coding/projects/jestPractice/src/App.js",[],["43","44","45","46","47","48"],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/index.js",[],["49","50","51","52","53","54"],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/reportWebVitals.js",[],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/todo.js",["55"],"// @flow\nimport * as React from 'react';\n// type Props = {\n//     item: {\n//         id: Date,\n//         text: string,\n//     }\n// }\n\nconst Todo = (): React.Node => {\n  const [items, setItems] = React.useState([]);\n  const [text, setText] = React.useState('');\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(text);\n    const newItem = {\n      text,\n      id: Date.now(),\n    };\n    setItems(items.concat(newItem));\n    console.log(newItem.text);\n    setText('');\n  };\n\n  return (\n    <div>\n      <h1 id=\"header\">\n        TODOs\n      </h1>\n\n      <ul>\n        {items.map((item) => (\n          <li key={item.id}>\n            {item.text}\n\n          </li>\n        ))}\n      </ul>\n\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"new-todo\">\n          What needs to be done?\n\n          <br />\n\n          <input id=\"new-todo\" onChange={handleChange} value={text} />\n        </label>\n\n        <button type=\"submit\">\n          Add #\n          {items.length + 1}\n        </button>\n      </form>\n\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/index.js",[],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/Header/header.js",["56"],"/* eslint-disable arrow-spacing */\nimport * as React from 'react';\n\n// type Props = {\n//     styles: {},\n// };\n\nconst Header = (): React.node =>{\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    console.log('header');\n  };\n\n  return (\n    <div style={{ border: '10px solid black' }}>\n      <h1> Header </h1>\n      <button onClick={handleOnClick} type=\"submit\"> log </button>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/List/List.js",[],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/pages/Main/List/ListItem.js",[],"/Users/jermi/Desktop/Coding/projects/jestPractice/src/utils/mock.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"57","replacedBy":"69"},{"ruleId":"59","replacedBy":"70"},{"ruleId":"61","replacedBy":"71"},{"ruleId":"63","replacedBy":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":26,"column":5,"nodeType":"77","messageId":"78","endLine":26,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":11,"column":5,"nodeType":"77","messageId":"78","endLine":11,"endColumn":16},"lines-around-directive",["79"],"no-spaced-func",["80"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["79"],["80"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]